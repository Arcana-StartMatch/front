name: Deploy React App

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: npm run build

      - name: Deploy to server REMOTE_HOST ${{ secrets.SSH_HOST }} REMOTE_USER ${{ secrets.SSH_USERNAME }} SSH_PRIVATE_KEY ${{ secrets.SSH_KEY }}
        run: |
          # Install `paramiko` library for SCP functionality
          pip install paramiko

          # Import libraries
          import paramiko

          # Securely obtain credentials from secrets
          host = ${{ secrets.SSH_HOST }}
          username = ${{ secrets.SSH_USERNAME }}
          key_path = ${{ secrets.SSH_KEY }}

          # Read private key content
          with open(key_path, 'r') as f:
              key = paramiko.RSAKey.from_private_key_pem(f.read())

          # Connect to server using SSH
          ssh = paramiko.SSHClient()
          ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
          ssh.connect(hostname=host, username=username, pkey=key)

          # Create SFTP client
          sftp = ssh.open_sftp()

          # Define source and destination paths
          source_dir = '{{ env.PROJECT_ROOT_DIR }}/build'
          dest_dir = '{{ env.TARGET_DIR }}'

          # Upload files recursively
          sftp.put_r(source_dir, dest_dir)

          # Close connections
          sftp.close()
          ssh.close()
      - name: sleep
        run: sleep 30000 & 1
env:
  # Replace with your actual secrets
  SSH_HOST: ${{ secrets.SSH_HOST }}
  SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
  SSH_KEY: ${{ secrets.SSH_KEY }}
  TARGET_DIR: /var/www/html
  PROJECT_ROOT_DIR: front
